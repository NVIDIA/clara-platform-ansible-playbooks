# Copyright 2021 NVIDIA Corporation

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Check for 'clara' binary
  shell: "which clara"
  register: clara
  ignore_errors: True

- name: Remove 'clara' binary
  become: yes
  file:
    path: "{{ clara.stdout }}"
    state: absent
  when: clara.stdout != ''

- name: Check for 'clarac' binary
  shell: "which clarac"
  register: clarac
  ignore_errors: True

- name: Remove 'clarac' binary
  become: yes
  file:
    path: "{{ clarac.stdout }}"
    state: absent
  when: clarac.stdout != ''

- name: Check for 'clara-console' binary
  shell: "which clara-console"
  register: clara_console
  ignore_errors: True

- name: Remove 'clara-console' binary
  become: yes
  file:
    path: "{{ clara_console.stdout }}"
    state: absent
  when: clara_console.stdout != ''

- name: Check for 'clara-dicom' binary
  shell: "which clara-dicom"
  register: clara_dicom
  ignore_errors: True

- name: Remove 'clara-dicom' binary
  become: yes
  file:
    path: "{{ clara_dicom.stdout }}"
    state: absent
  when: clara_dicom.stdout != ''

- name: Check for 'clara-pull' binary
  shell: "which clara-pull"
  register: clara_pull
  ignore_errors: True

- name: Remove 'clara-pull' binary
  become: yes
  file:
    path: "{{ clara_pull.stdout }}"
    state: absent
  when: clara_pull.stdout != ''

- name: Check for 'clara-platform' binary
  shell: "which clara-platform"
  register: clara_platform
  ignore_errors: True

- name: Remove 'clara-platform' binary
  become: yes
  file:
    path: "{{ clara_platform.stdout }}"
    state: absent
  when: clara_platform.stdout != ''

- name: Check for 'clara-render' binary
  shell: "which clara-render"
  register: clara_render
  ignore_errors: True

- name: Remove 'clara-render' binary
  become: yes
  file:
    path: "{{ clara_render.stdout }}"
    state: absent
  when: clara_render.stdout != ''